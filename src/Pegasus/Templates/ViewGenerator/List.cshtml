@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@@model @GetEnumerableTypeExpression(Model.ViewDataTypeName)

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = "@Model.ViewName";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
@:<h2>@Model.ViewName</h2>
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.ViewName</title>
@:</head>
@:<body>
        //    PushIndent("    ");
    }
    @:<p>
    @:<a asp-action="Create">Create New</a>
    @:</p>
    @:<div class="table-responsive">
    @:<table class="table table-striped table-condensed">
    @:<thead>
    @:<tr>
    @:<th></th>
    @:<th></th>
    @:<th></th>
    @:<th>Id</th>

    IEnumerable<PropertyMetadata> properties = Model.ModelMetadata.Properties;
    foreach (var property in properties)
    {
        if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey)
        {
            <th>
                @@Html.DisplayNameFor(model => model.@GetValueExpression(property))
            </th>
        }
    }
    
    @:</tr>
    @:</thead>
    @:<tbody>
    @:@@foreach (var item in Model) {
    @:<tr>

    string pkName = GetPrimaryKeyName();
    if (pkName != null)
    {
        @:<td>
        @:<div class="table-row-condensed">
            @:<a asp-action="Edit" asp-route-id="@@item.@pkName">Edit</a> |
        @:</div>
        @:</td>
        @:<td>
        @:<div class="table-row-condensed">
            @:<a asp-action="Details" asp-route-id="@@item.@pkName">Details</a> |
        @:</div>
        @:</td>
        @:<td>
        @:<div class="table-row-condensed">
            @:<a asp-action="Delete" asp-route-id="@@item.@pkName">Delete</a>
        @:</div>
        @:</td>
    }
    else
    {
        <td>
            <div class="table-row-condensed">
                @@Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            </div>
        </td>
        <td>
            <div class="table-row-condensed">
            @@Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            </div>
        </td>
        <td>
            <div class="table-row-condensed">
                @@Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </div>
        </td>
        <td>
            <div class="table-row-condensed">
                @@Html.DisplayFor(modelItem => item.Id)
            </div>
        </td>
    }

    <td>
        <div class="table-row-condensed">
            @@Html.DisplayFor(modelItem => item.Id)
        </div>
    </td>

    foreach (PropertyMetadata property in properties)
    {
        if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey)
        {
            <td>
                <div class="table-row-condensed">
                @@Html.DisplayFor(modelItem => item.@GetValueExpression(property))
                </div>
            </td>
        }
    }
    
    @:</tr>
    @:}
    @:</tbody>

    @:</table>
    @:</div>
    if(!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
        //ClearIndent();
@:</body>
@:</html>
    }
}
@functions
{
    string GetPrimaryKeyName()
    {
        return (Model.ModelMetadata.PrimaryKeys != null && Model.ModelMetadata.PrimaryKeys.Length == 1)
        ? Model.ModelMetadata.PrimaryKeys[0].PropertyName
        : null;
    }

    string GetValueExpression(PropertyMetadata property)
    {
        //Todo: Get the association for the property and use that.
        return property.PropertyName;
    }

    string GetEnumerableTypeExpression(string typeName)
    {
        return "IEnumerable<" + typeName + ">";
    }
}